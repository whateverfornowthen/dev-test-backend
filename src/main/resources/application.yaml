server:
  port: ${SERVER_PORT}
  shutdown: "graceful"

# If you want to use a database then uncomment the `group:, readiness: and include: "db"`
# lines in the health probes and uncomment the datasource section
management:
  endpoint:
    health:
      show-details: "always"
      # group:
      #  readiness:
      #   include: "db"
  endpoints:
    web:
      base-path: /
      exposure:
        include: info # should we have more?

springdoc:
  packagesToScan: uk.gov.hmcts.reform.dev.controllers
  writer-with-order-by-keys: true

spring:
  config:
    import: "optional:file:.env[.properties]"
  application:
    name: Dev Test
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}${DB_OPTIONS:}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
# commented out because we're now seeded the database with an init.sql script
#  sql:
#    init:
#      mode: always
#  jpa:
#    hibernate:
#      ddl-auto: update   # Options: none, validate, update, create, create-drop
#    show-sql: true        # Optional: Logs SQL to console
#    properties:
#      hibernate:
#        format_sql: true
#    properties:
#      charSet: UTF-8
#    hikari:
#      minimumIdle: 2
#      maximumPoolSize: 10
#      idleTimeout: 10000
#      poolName: {to-be-defined}HikariCP
#      maxLifetime: 7200000
#      connectionTimeout: 30000
#  jpa:
#    properties:
#      hibernate:
#        jdbc:
#          lob:
#            # silence the 'wall-of-text' - unnecessary exception throw about blob types
#            non_contextual_creation: true
